// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(BaseDbContext))]
    [Migration("20251008122326_add-catalog")]
    partial class addcatalog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.DeweySiniflama", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("DeweySiniflamalar", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.DijitalIcerik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tur")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.ToTable("DijitalIcerikler", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Eser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Aciklama");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adi");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("DeweyKodu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DeweyKodu");

                    b.Property<string>("DilKodu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DilKodu");

                    b.Property<int>("EserTipi")
                        .HasColumnType("int")
                        .HasColumnName("EserTipi");

                    b.Property<int>("Kategori")
                        .HasColumnType("int")
                        .HasColumnName("Kategori");

                    b.Property<string>("MarcVerisi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MarcVerisi");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Eserler", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Domain.Entities.EserYazar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("EserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EserId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid>("YazarId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("YazarId");

                    b.HasKey("Id");

                    b.HasIndex("EserId");

                    b.HasIndex("YazarId");

                    b.ToTable("EserlerYazarlar", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.KitapYayınEvi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("KitapId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("YayinEviId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("KitapId");

                    b.HasIndex("YayinEviId");

                    b.ToTable("KitaplarYayinEvleri", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Konum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ad");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("KonumTip")
                        .HasColumnType("int")
                        .HasColumnName("KonumTip");

                    b.Property<Guid>("KutuphaneId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KutuphaneId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid?>("UstKonumId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UstKonumId");

                    b.HasKey("Id");

                    b.HasIndex("KutuphaneId");

                    b.HasIndex("UstKonumId");

                    b.ToTable("Konumlar", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Kopya", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barkod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Barkod");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("KitapId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KitapId");

                    b.Property<Guid>("KutuphaneId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KutuphaneId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("KitapId");

                    b.HasIndex("KutuphaneId");

                    b.ToTable("Kopyalar", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.KopyaBirim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barkod")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<Guid>("KonumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KopyaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KutuphaneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RafSira")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Barkod")
                        .IsUnique();

                    b.HasIndex("KopyaId");

                    b.HasIndex("KutuphaneId");

                    b.HasIndex("KonumId", "RafSira")
                        .IsUnique();

                    b.ToTable("KopyaBirimler", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.KopyaKonum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Adet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("Adet");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<Guid>("KonumId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KonumId");

                    b.Property<Guid>("KopyaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KopyaId");

                    b.Property<Guid>("KutuphaneId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KutuphaneId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("KonumId");

                    b.HasIndex("KopyaId");

                    b.HasIndex("KutuphaneId");

                    b.ToTable("KopyalarKonumlar", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Kullanici", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("Domain.Entities.Kutuphane", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adi");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adres");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("KurumTuru")
                        .HasColumnType("int")
                        .HasColumnName("KurumTuru");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.Property<Guid?>("UstKutuphaneId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UstKutuphaneId");

                    b.HasKey("Id");

                    b.HasIndex("UstKutuphaneId");

                    b.ToTable("Kutuphaneler", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MarcAlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Deger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ind1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ind2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MarcKaydiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MarcKaydiId", "Tag");

                    b.ToTable("MarcAlanlar", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MarcKaydi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("YayinTarihi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YayinYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Yazarlik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Isbn");

                    b.ToTable("MarcKayitlari", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Odunc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<int>("Durum")
                        .HasColumnType("int")
                        .HasColumnName("Durum");

                    b.Property<DateTime?>("GercekTeslimTarihi")
                        .HasColumnType("datetime2")
                        .HasColumnName("GercekTeslimTarihi");

                    b.Property<Guid>("KopyaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KopyaId");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KullaniciId");

                    b.Property<Guid>("KutuphaneId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KutuphaneId");

                    b.Property<DateTime>("OduncAlmaTarihi")
                        .HasColumnType("datetime2")
                        .HasColumnName("OduncAlmaTarihi");

                    b.Property<DateTime>("SonTeslimTarihi")
                        .HasColumnType("datetime2")
                        .HasColumnName("SonTeslimTarihi");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("KopyaId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("KutuphaneId");

                    b.ToTable("Oduncler", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.YayinEvi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adi");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("YayinEvleri", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Yazar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adi");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedDate");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Soyadi");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Yazarlar", (string)null);
                });

            modelBuilder.Entity("Kitap", b =>
                {
                    b.HasBaseType("Domain.Entities.Eser");

                    b.Property<string>("BasimYeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BasimYeri");

                    b.Property<short>("BasimYili")
                        .HasColumnType("smallint")
                        .HasColumnName("BasimYili");

                    b.Property<string>("BaskiBilgisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BaskiBilgisi");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ISBN");

                    b.Property<string>("SayfaSayisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SayfaSayisi");

                    b.ToTable("Kitaplar", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.EserYazar", b =>
                {
                    b.HasOne("Domain.Entities.Eser", "Eser")
                        .WithMany("EserlerYazarlar")
                        .HasForeignKey("EserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Yazar", "Yazar")
                        .WithMany("EserlerYazarlar")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eser");

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("Domain.Entities.KitapYayınEvi", b =>
                {
                    b.HasOne("Kitap", "Kitap")
                        .WithMany("KitaplarYayinEvleri")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.YayinEvi", "YayinEvi")
                        .WithMany("KitaplarYayinEvleri")
                        .HasForeignKey("YayinEviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("YayinEvi");
                });

            modelBuilder.Entity("Domain.Entities.Konum", b =>
                {
                    b.HasOne("Domain.Entities.Kutuphane", "Kutuphane")
                        .WithMany("Konumlar")
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Konum", "UstKonum")
                        .WithMany("AltKonumlar")
                        .HasForeignKey("UstKonumId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Kutuphane");

                    b.Navigation("UstKonum");
                });

            modelBuilder.Entity("Domain.Entities.Kopya", b =>
                {
                    b.HasOne("Kitap", "Kitap")
                        .WithMany("Kopyalar")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Kutuphane", "Kutuphane")
                        .WithMany("Kopyalar")
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Kutuphane");
                });

            modelBuilder.Entity("Domain.Entities.KopyaBirim", b =>
                {
                    b.HasOne("Domain.Entities.Konum", "Konum")
                        .WithMany()
                        .HasForeignKey("KonumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Kopya", "Kopya")
                        .WithMany()
                        .HasForeignKey("KopyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Kutuphane", "Kutuphane")
                        .WithMany()
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Konum");

                    b.Navigation("Kopya");

                    b.Navigation("Kutuphane");
                });

            modelBuilder.Entity("Domain.Entities.KopyaKonum", b =>
                {
                    b.HasOne("Domain.Entities.Konum", "Konum")
                        .WithMany("KopyaKonumlar")
                        .HasForeignKey("KonumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Kopya", "Kopya")
                        .WithMany("KopyalarKonumlar")
                        .HasForeignKey("KopyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Kutuphane", "Kutuphane")
                        .WithMany()
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Konum");

                    b.Navigation("Kopya");

                    b.Navigation("Kutuphane");
                });

            modelBuilder.Entity("Domain.Entities.Kutuphane", b =>
                {
                    b.HasOne("Domain.Entities.Kutuphane", "UstKutuphane")
                        .WithMany("AltKutuphaneler")
                        .HasForeignKey("UstKutuphaneId");

                    b.Navigation("UstKutuphane");
                });

            modelBuilder.Entity("Domain.Entities.MarcAlan", b =>
                {
                    b.HasOne("Domain.Entities.MarcKaydi", "MarcKaydi")
                        .WithMany("Alanlar")
                        .HasForeignKey("MarcKaydiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MarcKaydi");
                });

            modelBuilder.Entity("Domain.Entities.Odunc", b =>
                {
                    b.HasOne("Domain.Entities.Kopya", "Kopya")
                        .WithMany()
                        .HasForeignKey("KopyaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Kullanici", "Kullanici")
                        .WithMany("OduncKayitlari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Kutuphane", "Kutuphane")
                        .WithMany()
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kopya");

                    b.Navigation("Kullanici");

                    b.Navigation("Kutuphane");
                });

            modelBuilder.Entity("Kitap", b =>
                {
                    b.HasOne("Domain.Entities.Eser", null)
                        .WithOne()
                        .HasForeignKey("Kitap", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Eser", b =>
                {
                    b.Navigation("EserlerYazarlar");
                });

            modelBuilder.Entity("Domain.Entities.Konum", b =>
                {
                    b.Navigation("AltKonumlar");

                    b.Navigation("KopyaKonumlar");
                });

            modelBuilder.Entity("Domain.Entities.Kopya", b =>
                {
                    b.Navigation("KopyalarKonumlar");
                });

            modelBuilder.Entity("Domain.Entities.Kullanici", b =>
                {
                    b.Navigation("OduncKayitlari");
                });

            modelBuilder.Entity("Domain.Entities.Kutuphane", b =>
                {
                    b.Navigation("AltKutuphaneler");

                    b.Navigation("Konumlar");

                    b.Navigation("Kopyalar");
                });

            modelBuilder.Entity("Domain.Entities.MarcKaydi", b =>
                {
                    b.Navigation("Alanlar");
                });

            modelBuilder.Entity("Domain.Entities.YayinEvi", b =>
                {
                    b.Navigation("KitaplarYayinEvleri");
                });

            modelBuilder.Entity("Domain.Entities.Yazar", b =>
                {
                    b.Navigation("EserlerYazarlar");
                });

            modelBuilder.Entity("Kitap", b =>
                {
                    b.Navigation("KitaplarYayinEvleri");

                    b.Navigation("Kopyalar");
                });
#pragma warning restore 612, 618
        }
    }
}
